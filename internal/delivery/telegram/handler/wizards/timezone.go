package wizards

import (
	"context"
	"log/slog"
	"strings"

	"github.com/8thgencore/dory-reminder-bot/internal/delivery/telegram/handler/texts"
	"github.com/8thgencore/dory-reminder-bot/internal/delivery/telegram/session"
	"github.com/8thgencore/dory-reminder-bot/internal/usecase"
	"github.com/8thgencore/dory-reminder-bot/pkg/timezone"
	tele "gopkg.in/telebot.v4"
)

// TimezoneWizard –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –º–∞—Å—Ç–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
type TimezoneWizard struct {
	UserUsecase    usecase.UserUsecase
	SessionManager *session.SessionManager
	GetMainMenu    func() *tele.ReplyMarkup
}

// NewTimezoneWizard —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–∞—Å—Ç–µ—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
func NewTimezoneWizard(userUc usecase.UserUsecase, sessionMgr *session.SessionManager, getMainMenu func() *tele.ReplyMarkup) *TimezoneWizard {
	return &TimezoneWizard{
		UserUsecase:    userUc,
		SessionManager: sessionMgr,
		GetMainMenu:    getMainMenu,
	}
}

// OnTimezone –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /timezone
func (tw *TimezoneWizard) OnTimezone(c tele.Context) error {
	tw.SessionManager.Set(&session.AddReminderSession{
		UserID: c.Sender().ID,
		ChatID: c.Chat().ID,
		Step:   session.StepTimezone,
	})
	return c.Send("üåç –í–≤–µ–¥–∏—Ç–µ –≤–∞—à —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ IANA (–Ω–∞–ø—Ä–∏–º–µ—Ä, Europe/Moscow, America/New_York, Asia/Tokyo):")
}

// HandleTimezoneText –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
func (tw *TimezoneWizard) HandleTimezoneText(c tele.Context) error {
	userID := c.Sender().ID
	chatID := c.Chat().ID
	tz := strings.TrimSpace(c.Text())

	if !timezone.IsValidTimezone(tz) {
		return c.Send(texts.UnknownTimezone)
	}

	err := tw.UserUsecase.SetTimezone(context.Background(), chatID, userID, tz)
	if err != nil {
		slog.Error("Failed to set custom timezone", "user_id", userID, "chat_id", chatID, "timezone", tz, "error", err)
		return c.Send("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞")
	}

	tw.SessionManager.Delete(chatID, userID)

	slog.Info("Custom timezone set", "user_id", userID, "chat_id", chatID, "timezone", tz)
	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ help-–º–µ–Ω—é —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç–∞–π–º–∑–æ–Ω—ã
	return c.Send(texts.HelpMainMenu, &tele.SendOptions{ParseMode: tele.ModeMarkdown}, tw.GetMainMenu())
}
